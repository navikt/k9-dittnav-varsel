management:
   endpoints:
      web:
         exposure:
            include: health, prometheus
   endpoint:
      health:
         show-details: always
spring:
  application:
    name: # Settes i nais/<cluster>.json
  mvc:
    log-request-details: true
kafka:
  aiven:
    servers: ${KAFKA_BROKERS}
    consumer:
      enable-auto-commit: false
      group-id: ${spring.application.name}
      auto-offset-reset: # overstyres fra nais/<cluster>.json
      isolation-level: read_uncommitted
      retry-interval: 60_000 # Egendefinert property
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      client-id: ${HOSTNAME}
      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      retries: 3
      schemaRegistryUrl: ${KAFKA_SCHEMA_REGISTRY}
      schemaRegistryUser: ${KAFKA_SCHEMA_REGISTRY_USER}
      schemaRegistryPassword: ${KAFKA_SCHEMA_REGISTRY_PASSWORD}
